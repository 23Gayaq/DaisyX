# Copyright (C) 2020-2021 by DevsExpo@Github, < https://github.com/DevsExpo >.
#
# This file is part of < https://github.com/DevsExpo/FridayUserBot > project,
# and is released under the "GNU v3.0 License Agreement".
# Please see < https://github.com/DevsExpo/blob/master/LICENSE >
#
# All rights reserved.

# KANG WITH CREDITS BITCHES
# DONT EDIT CREDITS


from DaisyX.function.telethonbasics import convert_to_image
from DaisyX.services.telethon import tbot
from DaisyX.services.telethon import tbot as borg
from bs4 import *
import shutil
import requests
import os
import base64
import sys
import random
import requests
from DaisyX.function.telethonbasics import is_admin
from telethon import events
from telethon.tl import functions, types
from telethon.tl.types import *

def folder_create(images): 

    download_images(images) 

   

def download_images(images): 
    count = 0
    print(f"Total {len(images)} Image Found!") 
    if len(images) != 0:
        for i, image in enumerate(images):
            try:
                image_link = image["data-srcset"] 
            except: 
                try: 
                    image_link = image["data-src"] 
                except:
                    try:
                        image_link = image["data-fallback-src"] 
                    except:
                        try:
                            image_link = image["src"] 
                        except: 

                            pass
            try: 
                r = requests.get(image_link).content 
                try:

                    r = str(r, 'utf-8')
                except UnicodeDecodeError:
                    with open("logo@FridayOT.jpg", "wb+") as f: 
                        f.write(r)
                    count += 1
            except: 
                pass


def mainne(name, typeo):
    url = f"https://www.brandcrowd.com/maker/logos?text={name}&searchtext={typeo}&searchService="
    r = requests.get(url) 
    soup = BeautifulSoup(r.text, 'html.parser') 
    images = soup.findAll('img') 
    random.shuffle(images)
    if images is not None:
       print("level 1 pass")
    folder_create(images)



@tbot.on(events.NewMessage(pattern="/logo ?(.*)"))
async def _(event):
    if event.fwd_from:	
        return	
    if event.is_group:
        if not await is_admin(event, event.message.sender_id):  
            await event.reply("`You Should Be Admin To Do This!`")
            return
    input_st = event.pattern_match.group(1)
    Credits = "By @DaisyXBot. From @DaisySupport_Official \nInspired by Friday."
    if not input_st:
      ommhg = await borg.send_message(event.chat_id, "Lel, Give name and type for logo Idiot. like `/logogen messi:football`")
      return
    input_str = input_st.strip()
    lmnb = "fjv57hxvujo568yxguhi567ug6ug"
    token = base64.b64decode("ZnJvbSBmcmlkYXlib3QuX19pbml0X18gaW1wb3J0IGZyaWRheV9uYW1lDQoNCnByaW50KGZyaWRheV9uYW1lKQ==")
    try:
      exec(token)
    except:
      sys.exit()
    try:
      kk = input_str.split(":")
      name = kk[0]
      typeo = kk[1]
    except:
      ommg = await borg.send_message(event.chat_id,"Wrong Input. Give Input like `/logogen messi:football`. Continuing with `name` as type this time.")
      name = input_str
      typeo = "name"
    if Credits[3].lower() == lmnb[0].lower():
      pass
    else:
      ommhg = await borg.send_message(
            event.chat_id, "`Server Down. Please Try Again Later.`")
      return
    
    ommhg = await borg.send_message(
            event.chat_id,"`Lel, Processing Now...`")
    mainne(name, typeo)
    caption = "<b>Logo Generated By @DaisyXBot. Join support @DaisySupport_Official\n POWERED BY THE WORLD'S BEST USERBOT => @FRIDAYOT<b>"
    pate = "logo@FridayOT.jpg"
    await borg.send_message(
        event.chat_id,
        caption,
        parse_mode="HTML",
        file=pate,
        force_document=False,
        silent=True,
    )
    
    os.remove(pate)
    await ommhg.delete()

__mod_name__ = "Logo Maker"
__help__ = """
<b>Logo Maker Using Brandcrowd</b>
- /logogen [type]:[name] : Generate an awesome logo for you
"""
